     1                                  ;********************************************************************************************
     2                                  ; Program name:          Reverse Array                                            *
     3                                  ; Programming Language:  x86 Assembly                                                       *
     4                                  ; Program Description:   This program asks a user to input integers into an array and       *
     5                                  ;                        returns array in reverse.                          *
     6                                  ;                                                                                           *
     7                                  ;********************************************************************************************
     8                                  ; Author Information:                                                                       *
     9                                  ; Name:         Bilal El-haghassan                                                          *
    10                                  ; Email:        bilalelhaghassan@csu.fullerton.edu                                          *    
    11                                  ; Institution:  California State University - Fullerton                                     *
    12                                  ; Course:       CPSC 240-05 Assembly Language                                               *
    13                                  ;                                                                                           *
    14                                  ;********************************************************************************************
    15                                  ; Copyright (C) 2020 Bilal El-haghassan                                                     *
    16                                  ; This program is free software: you can redistribute it and/or modify it under the terms   * 
    17                                  ; of the GNU General Public License version 3 as published by the Free Software Foundation. * 
    18                                  ; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY  *
    19                                  ; without even the implied Warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. * 
    20                                  ; See the GNU General Public License for more details. A copy of the GNU General Public     *
    21                                  ; License v3 is available here:  <https://www.gnu.org/licenses/>.                           *
    22                                  ;                                                                                           *
    23                                  ;********************************************************************************************
    24                                  extern swap
    25                                  global reverse                       ; Makes function callable from other linked files.
    26                                  
    27                                  section .data     
    28                                  section .bss
    29                                  
    30                                  section .text
    31                                  
    32                                  reverse:
    33                                  
    34                                  ; Back up all registers to stack and set stack pointer to base pointer
    35 00000000 55                      push rbp
    36 00000001 4889E5                  mov rbp, rsp
    37 00000004 57                      push rdi
    38 00000005 56                      push rsi
    39 00000006 52                      push rdx
    40 00000007 51                      push rcx
    41 00000008 4150                    push r8
    42 0000000A 4151                    push r9
    43 0000000C 4152                    push r10
    44 0000000E 4153                    push r11
    45 00000010 4154                    push r12
    46 00000012 4155                    push r13
    47 00000014 4156                    push r14
    48 00000016 4157                    push r15
    49 00000018 53                      push rbx
    50 00000019 9C                      pushf
    51                                  
    52 0000001A 6AFF                    push qword -1                           ; Extra push onto stack to make even # of pushes.
    53                                  
    54 0000001C 4989FE                  mov r14, rdi 
    55 0000001F 4989F4                  mov r12, rsi 
    56 00000022 49FFCC                  dec r12
    57                                  
    58 00000025 41BF00000000            mov r15, 0 
    59                                  
    60                                  begin_loop:
    61                                  
    62 0000002B 4C89F7                  mov rdi, r14
    63 0000002E 4C89E6                  mov rsi, r12
    64 00000031 4C89FA                  mov rdx, r15
    65 00000034 E8(00000000)            call swap
    66                                  
    67 00000039 49FFC7                  inc r15
    68 0000003C 49FFCC                  dec r12
    69                                  
    70 0000003F 4D39E7                  cmp r15, r12
    71 00000042 7D02                    jge end_loop   
    72                                  
    73 00000044 EBE5                    jmp begin_loop
    74                                  
    75                                  end_loop:
    76                                  
    77                                  ; Restores all backed up registers to their original state.
    78 00000046 58                      pop rax                                ; Remove extra push of -1 from stack.
    79 00000047 4C89F8                  mov qword rax, r15
    80 0000004A 9D                      popf                                                       
    81 0000004B 5B                      pop rbx                                                     
    82 0000004C 415F                    pop r15                                                     
    83 0000004E 415E                    pop r14                                                      
    84 00000050 415D                    pop r13                                                      
    85 00000052 415C                    pop r12                                                      
    86 00000054 415B                    pop r11                                                     
    87 00000056 415A                    pop r10                                                     
    88 00000058 4159                    pop r9                                                      
    89 0000005A 4158                    pop r8                                                      
    90 0000005C 59                      pop rcx                                                     
    91 0000005D 5A                      pop rdx                                                     
    92 0000005E 5E                      pop rsi                                                     
    93 0000005F 5F                      pop rdi                                                     
    94 00000060 5D                      pop rbp
    95                                  
    96 00000061 C3                      ret
