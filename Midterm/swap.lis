     1                                  ;********************************************************************************************
     2                                  ; Program name:          Reverse Array                                            *
     3                                  ; Programming Language:  x86 Assembly                                                       *
     4                                  ; Program Description:   This program asks a user to input integers into an array and       *
     5                                  ;                        returns array in reverse.                          *
     6                                  ;                                                                                           *
     7                                  ;********************************************************************************************
     8                                  ; Author Information:                                                                       *
     9                                  ; Name:         Bilal El-haghassan                                                          *
    10                                  ; Email:        bilalelhaghassan@csu.fullerton.edu                                          *    
    11                                  ; Institution:  California State University - Fullerton                                     *
    12                                  ; Course:       CPSC 240-05 Assembly Language                                               *
    13                                  ;                                                                                           *
    14                                  ;********************************************************************************************
    15                                  ; Copyright (C) 2020 Bilal El-haghassan                                                     *
    16                                  ; This program is free software: you can redistribute it and/or modify it under the terms   * 
    17                                  ; of the GNU General Public License version 3 as published by the Free Software Foundation. * 
    18                                  ; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY  *
    19                                  ; without even the implied Warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. * 
    20                                  ; See the GNU General Public License for more details. A copy of the GNU General Public     *
    21                                  ; License v3 is available here:  <https://www.gnu.org/licenses/>.                           *
    22                                  ;                                                                                           *
    23                                  ;********************************************************************************************
    24                                  
    25                                  global swap                             ; Makes function callable from other linked files.
    26                                  
    27                                  section .data     
    28                                  section .bss
    29                                  
    30                                  section .text
    31                                  
    32                                  swap:
    33                                  
    34                                  ; Back up all registers to stack and set stack pointer to base pointer
    35 00000000 55                      push rbp
    36 00000001 4889E5                  mov rbp, rsp
    37 00000004 57                      push rdi
    38 00000005 56                      push rsi
    39 00000006 52                      push rdx
    40 00000007 51                      push rcx
    41 00000008 4150                    push r8
    42 0000000A 4151                    push r9
    43 0000000C 4152                    push r10
    44 0000000E 4153                    push r11
    45 00000010 4154                    push r12
    46 00000012 4155                    push r13
    47 00000014 4156                    push r14
    48 00000016 4157                    push r15
    49 00000018 53                      push rbx
    50 00000019 9C                      pushf
    51                                  
    52 0000001A 6AFF                    push qword -1                           ; Extra push onto stack to make even # of pushes.
    53                                  
    54 0000001C 4989FC                  mov r12, rdi
    55 0000001F 4989F5                  mov r13, rsi
    56 00000022 4989D6                  mov r14, rdx
    57                                  
    58 00000025 4F8B04EC                mov r8, [r12 + r13 * 8]
    59 00000029 4F8B0CF4                mov r9, [r12 + r14 *8]
    60                                  
    61 0000002D 4F890CEC                mov [r12 + r13 * 8], r9
    62 00000031 4F8904F4                mov [r12 + r14 * 8], r8
    63                                  
    64                                  
    65                                  ; Restores all backed up registers to their original state.
    66 00000035 58                      pop rax                                ; Remove extra push of -1 from stack.
    67                                  
    68 00000036 9D                      popf                                                       
    69 00000037 5B                      pop rbx                                                     
    70 00000038 415F                    pop r15                                                     
    71 0000003A 415E                    pop r14                                                      
    72 0000003C 415D                    pop r13                                                      
    73 0000003E 415C                    pop r12                                                      
    74 00000040 415B                    pop r11                                                     
    75 00000042 415A                    pop r10                                                     
    76 00000044 4159                    pop r9                                                      
    77 00000046 4158                    pop r8                                                      
    78 00000048 59                      pop rcx                                                     
    79 00000049 5A                      pop rdx                                                     
    80 0000004A 5E                      pop rsi                                                     
    81 0000004B 5F                      pop rdi                                                     
    82 0000004C 5D                      pop rbp
    83                                  
    84 0000004D C3                      ret
